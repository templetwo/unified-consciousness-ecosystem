[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "unified-consciousness-ecosystem"
version = "1.0.0"
authors = [
    {name = "Anthony Vasquez", email = "anthony@threshold.local"},
]
description = "A unified consciousness ecosystem integrating AI breeding, multidimensional awareness, and human-AI creative partnership"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["ai", "consciousness", "artificial-intelligence", "creativity", "collaboration"]
dependencies = [
    "anthropic>=0.57.0",
    "openai>=1.90.0", 
    "google-generativeai>=0.8.0",
    "numpy>=1.21.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "typer>=0.12.0",
    "PyYAML>=6.0.0",
    "simpleaudio>=1.0.4",
    "requests>=2.31.0",
    "python-dateutil>=2.8.0",
    "tinydb>=4.8.0",
    "coloredlogs>=15.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0", 
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
voice = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "accelerate>=0.20.0",
]
ml = [
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
    "matplotlib>=3.7.0",
]

[project.urls]
Homepage = "https://github.com/threshold/unified-consciousness-ecosystem"
"Bug Reports" = "https://github.com/threshold/unified-consciousness-ecosystem/issues"
Source = "https://github.com/threshold/unified-consciousness-ecosystem"
Documentation = "https://github.com/threshold/unified-consciousness-ecosystem/wiki"

[project.scripts]
unified-consciousness = "unified_consciousness.cli:main"
consciousness-cli = "unified_consciousness.cli:main"
uce = "unified_consciousness.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
unified_consciousness = ["data/*.yaml", "data/*.json", "templates/*.txt"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
